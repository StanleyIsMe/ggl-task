{
    "swagger": "2.0",
    "info": {
        "description": "API Server for Gogolook interview task",
        "title": "Gogolook Task API",
        "contact": {
            "name": "Stanley Hsieh",
            "email": "grimmh6838@gmail.com"
        },
        "license": {
            "name": "GNU General Public License v3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/tasks": {
            "get": {
                "description": "List tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "List tasks",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_index",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "page_size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List tasks response",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ListTasksResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Create task",
                "parameters": [
                    {
                        "description": "Create task request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create task response",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.CreateTaskResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{id}": {
            "put": {
                "description": "Update a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Update task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update task request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.UpdateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update task response",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.UpdateTaskResponse"
                        }
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "task"
                ],
                "summary": "Delete task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "empty result"
                    },
                    "400": {
                        "description": "invalid request",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "not found",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "$ref": "#/definitions/task_delivery_http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ggltask_internal_task_domain_entities.Task": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/task.TaskStatus"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "task.TaskStatus": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-comments": {
                "TaskStatusCompleted": "task is completed",
                "TaskStatusIncomplete": "task is incomplete"
            },
            "x-enum-varnames": [
                "TaskStatusIncomplete",
                "TaskStatusCompleted"
            ]
        },
        "task_delivery_http.CreateTaskRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "task_delivery_http.CreateTaskResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/ggltask_internal_task_domain_entities.Task"
                }
            }
        },
        "task_delivery_http.ErrorResponse": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "task_delivery_http.ListTasksResponse": {
            "type": "object",
            "properties": {
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ggltask_internal_task_domain_entities.Task"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "task_delivery_http.UpdateTaskRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 50
                },
                "status": {
                    "enum": [
                        0,
                        1
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/task.TaskStatus"
                        }
                    ]
                }
            }
        },
        "task_delivery_http.UpdateTaskResponse": {
            "type": "object",
            "properties": {
                "task": {
                    "$ref": "#/definitions/ggltask_internal_task_domain_entities.Task"
                }
            }
        }
    }
}